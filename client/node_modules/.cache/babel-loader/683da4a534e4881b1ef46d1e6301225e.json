{"ast":null,"code":"var _jsxFileName = \"/Users/lukeolsen/projects/fumblerooski/src/components/Conferences/Conference.js\";\nimport React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { setTeam } from '../../actions/index';\nimport Team from '../Teams/Team';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTeam: team => dispatch(setTeam(team)) // fetchTeamData: team => dispatch(fetchTeamData(team))\n\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    teams: state.teamReducer.data\n  };\n};\n\nclass ConferenceOne extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"flex flex-row justify-center flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.teams ? this.props.teams.map(team => {\n      return React.createElement(\"div\", {\n        onClick: () => setTeam(team),\n        key: team['id'],\n        className: \"m-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Link, {\n        teamData: team,\n        className: \"Link-style\",\n        to: \"/team/\".concat(team['alt_name3']),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, team['alt_name3']));\n    }) : '', React.createElement(Route, {\n      path: \"/team/:teamName\",\n      component: Team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConferenceOne);","map":{"version":3,"sources":["/Users/lukeolsen/projects/fumblerooski/src/components/Conferences/Conference.js"],"names":["React","Component","Link","Route","connect","setTeam","Team","mapDispatchToProps","dispatch","team","mapStateToProps","state","console","log","teams","teamReducer","data","ConferenceOne","constructor","props","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHH,IAAAA,OAAO,EAAEI,IAAI,IAAID,QAAQ,CAACH,OAAO,CAACI,IAAD,CAAR,CADtB,CAEH;;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHG,IAAAA,KAAK,EAAEH,KAAK,CAACI,WAAN,CAAkBC;AADtB,GAAP;AAGH,CALD;;AASA,MAAMC,aAAN,SAA4BhB,SAA5B,CAAsC;AAClCiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWL,KAAX,GAAmB,KAAKK,KAAL,CAAWL,KAAX,CAAiBO,GAAjB,CAAqBZ,IAAI,IAAI;AAC7C,aACI;AAAK,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAACI,IAAD,CAA3B;AAAmC,QAAA,GAAG,EAAEA,IAAI,CAAC,IAAD,CAA5C;AAAoD,QAAA,SAAS,EAAC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,IAAhB;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,EAAE,kBAAWA,IAAI,CAAC,WAAD,CAAf,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFA,IAAI,CAAC,WAAD,CAApF,CADJ,CADJ;AAKH,KANmB,CAAnB,GAMI,EAPT,EAQI,oBAAC,KAAD;AAAO,MAAA,IAAI,mBAAX;AAAgC,MAAA,SAAS,EAAEH,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAaH;;AArBiC;;AAyBtC,eAAeF,OAAO,CAACM,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CU,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { setTeam } from '../../actions/index'\nimport Team from '../Teams/Team'\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setTeam: team => dispatch(setTeam(team)), \n        // fetchTeamData: team => dispatch(fetchTeamData(team))\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        teams: state.teamReducer.data\n    }\n}\n\n\n\nclass ConferenceOne extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"flex flex-row justify-center flex-wrap\">\n                {this.props.teams ? this.props.teams.map(team => {\n                    return (\n                        <div onClick={() => setTeam(team)} key={team['id']} className=\"m-8\">\n                            <Link teamData={team} className=\"Link-style\" to={`/team/${team['alt_name3']}`}>{team['alt_name3']}</Link>\n                        </div>\n                    )\n                }) : ''}\n                <Route path={`/team/:teamName`} component={Team} />\n            </div>\n    \n        )\n    }\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConferenceOne)"]},"metadata":{},"sourceType":"module"}
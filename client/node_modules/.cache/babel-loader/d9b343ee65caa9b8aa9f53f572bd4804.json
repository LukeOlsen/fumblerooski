{"ast":null,"code":"var _jsxFileName = \"/Users/lukeolsen/projects/fumblerooski/src/components/Conferences/Conferences.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport ConferenceOne from './Conference';\nimport { fetchConferenceData } from '../../actions/actionsAPI';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // setTeam: team => dispatch(setTeam(team)), \n    fetchConferenceData: team => dispatch(fetchTeamData(team))\n  };\n};\n\nexport default class Conferences extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conferences: ['SEC', 'ACC', 'Pac-12', 'Big-10', 'Big-12']\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"mb-8 text-6xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Conferences\"), React.createElement(\"div\", {\n      className: \"flex flex-row justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.conferences.map((conference, id) => {\n      return React.createElement(\"div\", {\n        className: \"m-8\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"Link-style\",\n        to: \"\".concat(this.props.match.url, \"/\").concat(conference),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, conference));\n    })), React.createElement(Route, {\n      path: \"\".concat(this.props.match.path, \"/:conferenceName\"),\n      component: ConferenceOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/lukeolsen/projects/fumblerooski/src/components/Conferences/Conferences.js"],"names":["React","Component","Route","Link","ConferenceOne","fetchConferenceData","mapDispatchToProps","dispatch","team","fetchTeamData","Conferences","constructor","props","state","conferences","componentDidMount","render","map","conference","id","match","url","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH;AACAF,IAAAA,mBAAmB,EAAEG,IAAI,IAAID,QAAQ,CAACE,aAAa,CAACD,IAAD,CAAd;AAFlC,GAAP;AAIH,CALD;;AAOA,eAAe,MAAME,WAAN,SAA0BT,SAA1B,CAAoC;AAC/CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,WAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,QAAzB,EAAmC,QAAnC;AADL,KAAZ;AAIH;;AAGDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADL,EAEK;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKH,KAAL,CAAWC,WAAX,CAAuBG,GAAvB,CAA2B,CAACC,UAAD,EAAaC,EAAb,KAAoB;AAC5C,aAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAEA,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,EAAE,YAAK,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,GAAtB,cAA6BH,UAA7B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2EA,UAA3E,CADL,CAAP;AAGH,KAJA,CADJ,CAFL,EAUK,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAK,KAAKN,KAAL,CAAWQ,KAAX,CAAiBE,IAAtB,qBAAX;AAAyD,MAAA,SAAS,EAAElB,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVL,CADJ;AAcH;;AA9B8C","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport ConferenceOne from './Conference'\nimport { fetchConferenceData } from '../../actions/actionsAPI'\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // setTeam: team => dispatch(setTeam(team)), \n        fetchConferenceData: team => dispatch(fetchTeamData(team))\n    }\n}\n \nexport default class Conferences extends Component {\n    constructor(props) {\n        super(props) \n\n        this.state ={\n            conferences: ['SEC', 'ACC', 'Pac-12', 'Big-10', 'Big-12']\n        }\n\n    }\n\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        return (\n            <div>\n                 <h1 className=\"mb-8 text-6xl\">Conferences</h1>\n                 <div className=\"flex flex-row justify-center\">\n                    {this.state.conferences.map((conference, id) => {\n                        return <div className=\"m-8\" key={id}>\n                                    <Link className=\"Link-style\" to={`${this.props.match.url}/${conference}`}>{conference}</Link>\n                                </div>\n                    })}\n                 </div>\n\n                 <Route path={`${this.props.match.path}/:conferenceName`} component={ConferenceOne} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}